#BlueJ class context
comment0.target=StdOut
comment0.text=\n\ \ This\ class\ provides\ methods\ for\ printing\ strings\ and\ numbers\ to\ standard\ output.\n\ \ <p>\n\ \ <b>Getting\ started.</b>\n\ \ To\ use\ this\ class,\ you\ must\ have\ {@code\ StdOut.class}\ in\ your\n\ \ Java\ classpath.\ If\ you\ used\ our\ autoinstaller,\ you\ should\ be\ all\ set.\n\ \ Otherwise,\ either\ download\n\ \ <a\ href\ \=\ "https\://introcs.cs.princeton.edu/java/code/stdlib.jar">stdlib.jar</a>\n\ \ and\ add\ to\ your\ Java\ classpath\ or\ download\n\ \ <a\ href\ \=\ "https\://introcs.cs.princeton.edu/java/stdlib/StdOut.java">StdOut.java</a>\n\ \ and\ put\ a\ copy\ in\ your\ working\ directory.\n\ \ <p>\n\ \ Here\ is\ an\ example\ program\ that\ uses\ {@code\ StdOut}\:\n\ \ <pre>\n\ \ \ public\ class\ TestStdOut\ {\n\ \ \ \ \ \ \ public\ static\ void\ main(String[]\ args)\ {\n\ \ \ \ \ \ \ \ \ \ \ int\ a\ \=\ 17;\n\ \ \ \ \ \ \ \ \ \ \ int\ b\ \=\ 23;\n\ \ \ \ \ \ \ \ \ \ \ int\ sum\ \=\ a\ +\ b;\n\ \ \ \ \ \ \ \ \ \ \ StdOut.println("Hello,\ World");\n\ \ \ \ \ \ \ \ \ \ \ StdOut.printf("%d\ +\ %d\ \=\ %d\\n",\ a,\ b,\ sum);\n\ \ \ \ \ \ \ }\n\ \ \ }\n\ \ </pre>\n\ \ <p>\n\ \ <b>Differences\ with\ System.out.</b>\n\ \ The\ behavior\ of\ {@code\ StdOut}\ is\ similar\ to\ that\ of\ {@link\ System\#out},\n\ \ but\ there\ are\ a\ few\ technical\ differences\:\n\ \ <ul>\n\ \ <li>\ {@code\ StdOut}\ coerces\ the\ character-set\ encoding\ to\ UTF-8,\n\ \ \ \ \ \ \ which\ is\ a\ standard\ character\ encoding\ for\ Unicode.\n\ \ <li>\ {@code\ StdOut}\ coerces\ the\ locale\ to\ {@link\ Locale\#US},\n\ \ \ \ \ \ \ for\ consistency\ with\ {@link\ StdIn},\ {@link\ Double\#parseDouble(String)},\n\ \ \ \ \ \ \ and\ floating-point\ literals.\n\ \ <li>\ {@code\ StdOut}\ <em>flushes</em>\ standard\ output\ after\ each\ call\ to\n\ \ \ \ \ \ \ {@code\ print()}\ so\ that\ text\ will\ appear\ immediately\ in\ the\ terminal.\n\ \ </ul>\n\ \ <p>\n\ \ <b>Reference.</b>\n\ \ For\ additional\ documentation,\n\ \ see\ <a\ href\="https\://introcs.cs.princeton.edu/15inout">Section\ 1.5</a>\ of\n\ \ <em>Computer\ Science\:\ An\ Interdisciplinary\ Approach</em>\n\ \ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\n\n\ \ @author\ Robert\ Sedgewick\n\ \ @author\ Kevin\ Wayne\n
comment1.params=
comment1.target=StdOut()
comment10.params=x
comment10.target=void\ println(int)
comment10.text=\n\ Prints\ an\ integer\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ integer\ to\ print\n
comment11.params=x
comment11.target=void\ println(long)
comment11.text=\n\ Prints\ a\ long\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ long\ to\ print\n
comment12.params=x
comment12.target=void\ println(short)
comment12.text=\n\ Prints\ a\ short\ integer\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ short\ to\ print\n
comment13.params=x
comment13.target=void\ println(byte)
comment13.text=\n\ Prints\ a\ byte\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\ <p>\n\ To\ write\ binary\ data,\ see\ {@link\ BinaryStdOut}.\n\n\ @param\ x\ the\ byte\ to\ print\n
comment14.params=
comment14.target=void\ print()
comment14.text=\n\ Flushes\ standard\ output.\n
comment15.params=x
comment15.target=void\ print(java.lang.Object)
comment15.text=\n\ Prints\ an\ object\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ object\ to\ print\n
comment16.params=x
comment16.target=void\ print(boolean)
comment16.text=\n\ Prints\ a\ boolean\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ boolean\ to\ print\n
comment17.params=x
comment17.target=void\ print(char)
comment17.text=\n\ Prints\ a\ character\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ character\ to\ print\n
comment18.params=x
comment18.target=void\ print(double)
comment18.text=\n\ Prints\ a\ double\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ double\ to\ print\n
comment19.params=x
comment19.target=void\ print(float)
comment19.text=\n\ Prints\ a\ float\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ float\ to\ print\n
comment2.params=filename
comment2.target=void\ setFile(java.lang.String)
comment20.params=x
comment20.target=void\ print(int)
comment20.text=\n\ Prints\ an\ integer\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ integer\ to\ print\n
comment21.params=x
comment21.target=void\ print(long)
comment21.text=\n\ Prints\ a\ long\ integer\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ long\ integer\ to\ print\n
comment22.params=x
comment22.target=void\ print(short)
comment22.text=\n\ Prints\ a\ short\ integer\ to\ standard\ output\ and\ flushes\ standard\ output.\n\ \n\ @param\ x\ the\ short\ integer\ to\ print\n
comment23.params=x
comment23.target=void\ print(byte)
comment23.text=\n\ Prints\ a\ byte\ to\ standard\ output\ and\ flushes\ standard\ output.\n\n\ @param\ x\ the\ byte\ to\ print\n
comment24.params=format\ args
comment24.target=void\ printf(java.lang.String,\ java.lang.Object[])
comment24.text=\n\ Prints\ a\ formatted\ string\ to\ standard\ output,\ using\ the\ specified\ format\n\ string\ and\ arguments,\ and\ then\ flushes\ standard\ output.\n\n\n\ @param\ format\ the\ <a\ href\ \=\ "http\://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html\#syntax">format\ string</a>\n\ @param\ args\ \ \ the\ arguments\ accompanying\ the\ format\ string\n
comment25.params=locale\ format\ args
comment25.target=void\ printf(java.util.Locale,\ java.lang.String,\ java.lang.Object[])
comment25.text=\n\ Prints\ a\ formatted\ string\ to\ standard\ output,\ using\ the\ locale\ and\n\ the\ specified\ format\ string\ and\ arguments;\ then\ flushes\ standard\ output.\n\n\ @param\ locale\ the\ locale\n\ @param\ format\ the\ <a\ href\ \=\ "http\://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html\#syntax">format\ string</a>\n\ @param\ args\ \ \ the\ arguments\ accompanying\ the\ format\ string\n
comment26.params=args
comment26.target=void\ main(java.lang.String[])
comment26.text=\n\ Unit\ tests\ some\ of\ the\ methods\ in\ {@code\ StdOut}.\n\n\ @param\ args\ the\ command-line\ arguments\n
comment3.params=
comment3.target=void\ close()
comment4.params=
comment4.target=void\ println()
comment4.text=\n\ Terminates\ the\ current\ line\ by\ printing\ the\ line-separator\ string.\n
comment5.params=x
comment5.target=void\ println(java.lang.Object)
comment5.text=\n\ Prints\ an\ object\ to\ this\ output\ stream\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ object\ to\ print\n
comment6.params=x
comment6.target=void\ println(boolean)
comment6.text=\n\ Prints\ a\ boolean\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ boolean\ to\ print\n
comment7.params=x
comment7.target=void\ println(char)
comment7.text=\n\ Prints\ a\ character\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ character\ to\ print\n
comment8.params=x
comment8.target=void\ println(double)
comment8.text=\n\ Prints\ a\ double\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ double\ to\ print\n
comment9.params=x
comment9.target=void\ println(float)
comment9.text=\n\ Prints\ an\ integer\ to\ standard\ output\ and\ then\ terminates\ the\ line.\n\n\ @param\ x\ the\ integer\ to\ print\n
numComments=27
